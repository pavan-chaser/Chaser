AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Create a CodePipeline to include Nested CloudFormation, CodeBuild and Approval
  steps.
Parameters:

  RepositoryName:
    Type: String
    Default: kubernetes
    Description: Name of the repo which contains CFN template.

  SNSTopic:
    Type: String
    Default: K8-Notification
    Description: Name of the SNS topic in same region to send K8 approval notification.
    
  K8SNSTopic:
    Type: String
    Default: K8-Notification
    Description: >-
      Name of the SNS topic in same region to send Production approval
      notification.
      
  ArtifactStoreS3Location:
    Type: String
    Default: clusters.kubernetes.etechbrain.com
    Description: Bucket name will create Give a Unique Name & Name of the S3 bucket to store CodePipeline artificat.

  SubscriptionEndPoint:
    Type: String
    Default: 'singaravelan.p@minfytech.com'
    Description: >-
      The endpoint that receives notifications from the Amazon SNS topic. The
      endpoint value depends on the protocol that you specify. 
      
  SubscriptionProtocol:
    Type: String
    Description: The subscription's protocol
    Default: email
    
Resources:

  Repository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: Kubernets infra automation
      
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Ref ArtifactStoreS3Location

  KubeSNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: !Ref SNSTopic
      DisplayName: !Ref SNSTopic
    
  SNSSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref SubscriptionEndPoint
      Protocol: !Ref SubscriptionProtocol
      TopicArn: !Ref KubeSNSTopic
      
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:
        'Fn::Sub': 'CodePipelineRole-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelineCFNAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:*'
                  - 'organizations:DescribeAccount'
                  - 'organizations:DescribeOrganization'
                  - 'organizations:DescribeOrganizationalUnit'
                  - 'organizations:DescribePolicy'
                  - 'organizations:ListChildren'
                  - 'organizations:ListParents'
                  - 'organizations:ListPoliciesForTarget'
                  - 'organizations:ListRoots'
                  - 'organizations:ListPolicies'
                  - 'organizations:ListTargetsForPolicy'
                Resource: '*'            
              - Effect: Allow
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:GetBucketPolicy'
                Resource:
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}'
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}/*'
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource:
                  - 'Fn::Sub': 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${K8SNSTopic}'
              -
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}
                      
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:
        'Fn::Sub': 'CloudFormationRole-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CloudFormationCFNAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:*'
                  - 'organizations:DescribeAccount'
                  - 'organizations:DescribeOrganization'
                  - 'organizations:DescribeOrganizationalUnit'
                  - 'organizations:DescribePolicy'
                  - 'organizations:ListChildren'
                  - 'organizations:ListParents'
                  - 'organizations:ListPoliciesForTarget'
                  - 'organizations:ListRoots'
                  - 'organizations:ListPolicies'
                  - 'organizations:ListTargetsForPolicy'
                Resource: '*'
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:AddRoleToInstanceProfile'
                  - 'iam:CreateInstanceProfile'
                  - 'iam:DeleteInstanceProfile'
                  - 'iam:GetInstanceProfile'
                  - 'iam:ListInstanceProfiles'
                  - 'iam:ListInstanceProfilesForRole'
                  - 'iam:RemoveRoleFromInstanceProfile'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:iam::${AWS::AccountId}:instance-profile/PROD-${AWS::StackName}-SecurityStack*
              - Effect: Allow
                Action:
                  - 'rds:AddTagsToResource'
                  - 'rds:CreateDBInstance'
                  - 'rds:CreateDBSecurityGroup'
                  - 'rds:DeleteDBInstance'
                  - 'rds:DeleteDBSecurityGroup'
                  - 'rds:DescribeDBInstances'
                  - 'rds:DescribeDBParameterGroups'
                  - 'rds:DescribeDBParameters'
                  - 'rds:DescribeDBSecurityGroups'
                  - 'rds:DescribeDBSubnetGroups'
                  - 'rds:DescribeOptionGroups'
                  - 'rds:ModifyDBInstance'
                  - 'rds:RebootDBInstance'
                  - 'rds:RemoveTagsFromResource'
                Resource:
                  - 'Fn::Sub': 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*'
                  - 'Fn::Sub': 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:og:*'
                  - 'Fn::Sub': 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:pg:*'
                  - 'Fn::Sub': 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:secgrp:*'
                  - 'Fn::Sub': 'arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:*'
              - Effect: Allow
                Action:
                  - 'elasticloadbalancing:AddTags'
                  - 'elasticloadbalancing:ApplySecurityGroupsToLoadBalancer'
                  - 'elasticloadbalancing:AttachLoadBalancerToSubnets'
                  - 'elasticloadbalancing:ConfigureHealthCheck'
                  - 'elasticloadbalancing:CreateListener'
                  - 'elasticloadbalancing:CreateLoadBalancerListeners'
                  - 'elasticloadbalancing:CreateLoadBalancerPolicy'
                  - 'elasticloadbalancing:DeleteListener'
                  - 'elasticloadbalancing:DeleteLoadBalancer'
                  - 'elasticloadbalancing:DeleteLoadBalancerListeners'
                  - 'elasticloadbalancing:DeleteLoadBalancerPolicy'
                  - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
                  - 'elasticloadbalancing:DetachLoadBalancerFromSubnets'
                  - 'elasticloadbalancing:ModifyListener'
                  - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
                  - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                  - 'elasticloadbalancing:RemoveTags'
                  - 'elasticloadbalancing:SetSecurityGroups'
                  - 'elasticloadbalancing:SetSubnets'
                  - 'elasticloadbalancing:SetLoadBalancerPoliciesOfListener'
                  - 'elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer'
                  - 'elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/WebELB-*
              - Effect: Allow
                Action:
                  - 'autoscaling:AttachInstances'
                  - 'autoscaling:AttachLoadBalancers'
                  - 'autoscaling:CreateOrUpdateTags'
                  - 'autoscaling:DeleteAutoScalingGroup'
                  - 'autoscaling:DeleteLaunchConfiguration'
                  - 'autoscaling:DeleteTags'
                  - 'autoscaling:SetDesiredCapacity'
                  - 'autoscaling:SetInstanceHealth'
                  - 'autoscaling:TerminateInstanceInAutoScalingGroup'
                  - 'autoscaling:UpdateAutoScalingGroup'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/kube-${AWS::StackName}-ServerStack-*
                  - 'Fn::Sub': >-
                      arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:launchConfiguration:${AWS::AccountId}:*:kube-${AWS::StackName}-ServerStack-*
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource:
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}'
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}/*'
                  
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName:
        'Fn::Sub': 'CodeBuildRole-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: CodeBuildCFNAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:Get*'
                  - 'cloudformation:Describe*'
                  - 'cloudformation:List*'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/kube-${AWS::StackName}*
              - Effect: Allow
                Action:
                  - 'codecommit:ListBranches'
                  - 'codecommit:ListRepositories'
                  - 'codecommit:BatchGetRepositories'
                  - 'codecommit:Get*'
                  - 'codecommit:GitPull'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
              -
                Effect: Allow
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'Fn::Sub': >-
                      arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                Resource:
                  - 'Fn::Sub': 'arn:aws:s3:::codepipeline-${AWS::Region}-*'
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}/*'
                  - 'Fn::Sub': 'arn:aws:s3:::${ArtifactStoreS3Location}'
                  
  CodeBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name:
        'Fn::Sub': 'Build-${AWS::StackName}'
      Description: Build to validate a CFN templates
      ServiceRole:
        'Fn::GetAtt':
          - CodeBuildRole
          - Arn
      Artifacts:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location
        Name:
          'Fn::Sub': 'Build-${AWS::StackName}'
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:2.0'
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value:
              Ref: ArtifactStoreS3Location
          - Name: TEMPLATE_PREFIX
            Value: codebuild
      Source:
        Location:
          'Fn::Sub': >-
            https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/${RepositoryName}
        Type: CODECOMMIT
      TimeoutInMinutes: 15
      #EncryptionKey:
        #'Fn::Sub': 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3'
      Tags:
        - Key: Name
          Value:
            'Fn::Sub': 'Build-${AWS::StackName}'

  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: Pipeline-${AWS::StackName}
      RoleArn:
          Fn::GetAtt: [ CodePipelineRole, Arn ]
      Stages:
        -
          Name: K8s-Source
          Actions:
            -
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              OutputArtifacts:
                -
                  Name: CFNTemplateOutput
              Configuration:
                BranchName: master
                RepositoryName:
                  Ref: RepositoryName
              RunOrder: 1
        -
          Name: K8s-CodeBuild
          Actions:
            -
              Name: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                -
                  Name: CFNTemplateArtifact
              Configuration:
                ProjectName:
                  Ref: CodeBuildProject
              RunOrder: 1
        -
          Name: K8s-Infra-Creation
          Actions:
            -
              Name: Create-K8s-ChangeSet
              InputArtifacts:
                -
                  Name: CFNTemplateArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                -
                  Name: Created-K8s-ChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: K8s-CBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM
                StackName:
                  Fn::Sub: K8s-Infra-${AWS::StackName}
                TemplateConfiguration: CFNTemplateArtifact::config-prod.json
                TemplatePath: CFNTemplateArtifact::vpc-prod.yml
              RunOrder: 1
            -
              Name: K8s-Infra-Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                NotificationArn:
                  Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${K8SNSTopic}
                CustomData: Approve deployment in production.
              RunOrder: 2
            -
              Name: Deploy-Infra-Stack
              InputArtifacts:
                -
                  Name: Created-K8s-ChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: K8s-CBChangeSet
                StackName:
                  Fn::Sub: K8s-Infra-${AWS::StackName}
              RunOrder: 3

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location
          
Outputs:

  S3BucketName:
    Description: A reference to the created S3Bucket
    Value: !Ref ArtifactStoreS3Location